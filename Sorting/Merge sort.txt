#include <iostream>
#include <vector>

using namespace std;

void merge(vector<int>& v, int l, int m, int r) {
    int i = l;
    int j = m + 1;
    vector<int> temp;
    while (i <= m && j <= r) {
        if (v[i] < v[j])
            temp.push_back(v[i++]);
        else
            temp.push_back(v[j++]);
    }
    while (i <= m)
        temp.push_back(v[i++]);
    while (j <= r)
        temp.push_back(v[j++]);
    for (int k = l; k <= r; ++k)
        v[k] = temp[k - l];
}

void merge_sort(vector<int>& v, int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        merge_sort(v, left, mid);
        merge_sort(v, mid + 1, right);
        merge(v, left, mid, right);
    }
}

int main() {
    vector<int> v;
    int y;
    while (cin >> y) {
        v.push_back(y);
    }
    merge_sort(v, 0, v.size() - 1);
    for (int x : v)
        cout << x << " ";
    cout << endl;
    return 0;
}
