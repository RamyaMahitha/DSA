#include <bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node *left;
    Node *right;
 Node(int val){
     this->data=val;
     this->left=NULL;
     this->right=NULL;
 }    
};
class Tree{
    public:
    Node *root=NULL;
    
      Node *create_insert_node(Node*root,int val){
        if(root==NULL){
            return new Node(val);
        }
        else if(val<root->data){
            root->left=create_insert_node(root->left,val);
            
        }
        else{
            root->right=create_insert_node(root->right,val);
        }
        return root;
    }
    void insert(int val){
            root=create_insert_node(root,val);
        }
void height(){
    cout<<findHeight(root)<<endl;
}
int findHeight(Node *root){
    if(root==NULL){
      return -1;
    }
    int Lsh=findHeight(root->left);
    int Rsh=findHeight(root->right);
    if(Lsh>Rsh){
        return Lsh+1;
    }
    else{
        return Rsh+1;
    }
}
};

int main()
{
    int i,t,n,value;
    cin>>t;
    while(t--){
        cin>>n;
         Tree bst;
        for(i=0;i<n;i++){
            cin>>value;
        bst.insert(value);
        }
        bst.height();
}
    return 0;
}