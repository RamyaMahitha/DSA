#include <bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node *left;
    Node *right;
 Node(int val){
     this->data=val;
     this->left=NULL;
     this->right=NULL;
 }    
};
class Tree{
    public:
    Node *root=NULL;
    
      Node *create_insert_node(Node*root,int val){
        if(root==NULL){
            return new Node(val);
        }
        else if(val<root->data){
            root->left=create_insert_node(root->left,val);
            
        }
        else{
            root->right=create_insert_node(root->right,val);
        }
        return root;
    }
    void insert(int val){
            root=create_insert_node(root,val);
        }
    void post(){
        post_order(root);
    }
    void pre(){
        pre_order(root);
    }
    void in(){
        in_order(root);
    }
    
     void post_order(Node *root){
         if(root==NULL){
             return;
         }
         post_order(root->left);
         post_order(root->right);
         cout<<root->data<<" ";
     }
   
     void pre_order(Node *root){
         if(root==NULL){
             return;
         }
         cout<<root->data<<" ";
         pre_order(root->left);
         pre_order(root->right);
     }
    
     void in_order(Node *root){
         if(root==NULL){
             return;
         }
         in_order(root->left);
         cout<<root->data<<" ";
         in_order(root->right);
     }
    
};
int main(){
    int i,t,n,value;
    cin>>t;
    while(t--){
        cin>>n;
         Tree bst;
        for(i=0;i<n;i++){
            cin>>value;
        bst.insert(value);
        }
        bst.pre();
        cout<<endl;
        bst.in();
        cout<<endl;
        bst.post();
        cout<<endl;
        cout<<endl;
        
    }
}
     
    